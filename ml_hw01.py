# -*- coding: utf-8 -*-
"""ML_hw01.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FAN71i5GqaKieQa_LRnO0QOyRY6xTuvM

p5
"""

import numpy as np

x=np.array([[1,2,3],[4,5,6]])
print("x:\n{}".format(x))

"""p6_1

"""

from scipy import sparse
eye = np.eye(4)
print("NumPy array:\n", eye)

"""p6_2

"""

#sparse 疏
sparse_matrix = sparse.csr_matrix(eye)
print("\nSciPy sparse CSR matrixL\n", sparse_matrix)

"""p7"""

# indices 指標
data = np.ones(4)
row_indices = np.arange(4)
col_indices = np.arange(4)
eye_coo = sparse.coo_matrix((data,(row_indices, col_indices)))
print("COO representation:\n",eye_coo)

"""p8
matplotlib是Python程式語言及其數值數學擴展包 NumPy的可視化操作界面
"""

#% matplotlib inline
import matplotlib.pyplot as plt
x = np.linspace(-10, 10, 100)
y = np.sin(x)
plt.plot(x, y, marker="x")
# [<matplotlib.lines.Line2D at 0x1be867b9748>]

"""p9_1 
pandas 是 Python 的一個資料分析函式庫
"""

import pandas as pd

# create a simple dataset of people
data ={
    "Name":["John","Anna","Peter","Linda"],
    "Location":["New York","Paris","Berlin","London"],
    "Age":[24,13,53,33]
} 

#pd.DataFrame(dict)：從字典物件匯入資料
data_pandas = pd.DataFrame(data)
display(data_pandas)

"""p9_2"""

# Select all rows that have an age column greater than 30
display(data_pandas[data_pandas.Age>30])

"""p10"""

import sys 
print("Python version:",sys.version)

import pandas as pd
print("pandas version:",pd.__version__)

import matplotlib
print("matplotlib version:",matplotlib.__version__)

import numpy as np
print("Numpy version:",np.__version__)

import scipy as sp 
print("SciPy version:",sp.__version__)

import IPython
print("IPython version:",sp.__version__)

import sklearn
print("scikit-learn version:", sklearn.__version__)

"""p11_1"""

from sklearn.datasets import load_iris
iris_dataset = load_iris()

"""p11_2"""

print("Keys of iris_dataset:\n", iris_dataset.keys())

"""p11_3"""

print(iris_dataset["DESCR"][:193]+"\n...")

"""p11_4"""

print("Target names:", iris_dataset["target_names"])

"""p12_1"""

print("Feature names:",iris_dataset["feature_names"])

"""p12_2"""

print("Type of data:",type(iris_dataset["data"]))

"""p12_3"""

print("Shape of data:",iris_dataset["data"].shape)

"""p12_4"""

print("First five rows of data:\n",iris_dataset["data"][:5])

"""p13_1"""

print("Type of target:",type(iris_dataset["target"]))

"""p13_2"""

print("Shape of target:",iris_dataset["target"].shape)

"""p13_3"""

print("Target:\n",iris_dataset["target"])

"""p14_1"""

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(
    iris_dataset["data"],iris_dataset["target"],random_state=0
)

"""p14_2"""

print("X_train shape:",X_train.shape)
print("Y_train shape:",y_train.shape)

"""p14_3"""

print("X_test shape:",X_test.shape)
print("y_test shape:",y_test.shape)

"""p15"""

iris_dataframe = pd.DataFrame(X_train,columns=iris_dataset.feature_names)
pd.plotting.scatter_matrix(iris_dataframe,
                           c=y_train,
                           figsize=(15,15),
                           marker="o",
                           hist_kwds={"bin":20},
                           s=60,alpha=.8,
                           cmap=mglearn.cm3)